<!-- Talk written by Alex and revised by Jon -->

<talk name="Meeting-Nov_30_2009">

<section name="Introduction" button="F">

<text break="T">
New in PBSmodelling:
-presentTalk
-project file managment (findSuffix/Prefix)
-project settings (PBSoption S4 class)
-integration with the new widgets (Rob)
	-runDemos uses a droplist
	-testWidgets
-resetGraph uses R's default values (no for updates between different versions)
-createWin env argument
-linux bwidget inclusion (and messages to help direct linux users to external packages to install)
-dynamic widget colours
-label widget text can change dynamically
-better Rd help file examples (which work)
-swisstalk SwissTalk swissTalk
</text>

<text break="T">
PBSadmb:
-my own learning curve
-linux/OSX/windows issues
-generic version without binaries
-(semi) intelligent default values
-random effects DOS/UNIX file handelling (yuck)
</text>

<text break="T">
Misc:
-SVN
-google code
-package builder / installer
</text>

</section>

<section name="PBSmodelling" button="TRUE">

<text break="T">
presentTalk rewritten to use XML parsing (which we get for free without bugs).
-modified GUI layout
-better alignment of buttons into two groupings (not a single column per type)
Let's look at the talk file (press next to open it up)
</text>

<!-- TODO bug: name can't contain a space -->
<file name="talkfile" button="TRUE">pbsmodelling.xml</file>

<text break="F">
Project options:
-use S4 classes
</text>

<code print="T" break="print">
#let's try the example from the Rd file
class?PBSoptions
</code>

<text break="T">
Below is the example copied directly from the help pages
</text>

<code print="T" break="print">
<![CDATA[
#initialize an option manager with a single logical option
.mypkg <<- new( "PBSoptions", filename = "my_pkg.txt", initial.options = list( sillyhatday = FALSE ) )

#retrieving an option
silly <- getOptions( .mypkg, "sillyhatday" )
cat( "today is", ifelse( silly, "silly hat day!", "monday" ), "\n" )
]]>
</code>

<code print="T" break="print">
<![CDATA[
#set an option
setOptions( .mypkg, sillyhatday = TRUE, photos = "/shares/silly_hat_photos" )
]]>
</code>

<code print="T" break="print">
<![CDATA[
#create a GUI which works with options
createWin( c( 
			"check name=optionsillyhatday text=\"silly hat day\"",
			"entry name=optionphotos mode=character label=\"photos directory\"",
			"button func=doAction text=save action=saveOptionsGUI(.mypkg)" ), astext = TRUE )

#update GUI values based on values stored in .mypkg's options
loadOptionsGUI( .mypkg )
]]>
</code>

<text> Change something in the GUI and click the Save button. </text>

<code>
# Current values in .mypkg
.mypkg
</code>

<text break="T">
Towards dynamic widgets:
-widgets can now have their colours (fg,bg) changed after a window has been created
-For example consider the following embeded window description:
</text>

<code print="T" break="none">
createWin( "label \"hello world\" name=foo padx=40 pady=40", astext=T )
</code>

<text break="T">
The colour can be changed with setWidgetColor
</text>

<code print="T">
setWidgetColor( "foo", "window", bg="black", fg="yellow" )
</code>

<text break="T">
(there's a good example in PBSadmb)

And the value can now be changed like one could always do to entry widgets.
(there's no need to use read-only widgets to display status messages anymore)
</text>

<code print="T">
setWinVal( c( foo = "Good bye cruel world" ), winName="window" )
</code>

<text break="T">
Finally, lots of PBSmodelling's Rd files didn't contain valid examples 
that a user could copy and paste and expect to have work completely.
For example, the examples often tried to open files that didn't exist.
</text>

</section>

<section name="PBSadmb" button="T">
<text>
ADMB
	- not really an open source project (yet)
	- strange distribution method (probably since you can't compile it on your own)
	- DOS/UNIX issues (random effects)
</text>

<text>
PBSadmb
	-any news from the ADMB folks? or other cran users?
	-future work: installADMB for linux/OSX users? There are many more variables (different gcc versions)
</text>

</section>

<file name="CWD" button="TRUE">.</file>

</talk>
